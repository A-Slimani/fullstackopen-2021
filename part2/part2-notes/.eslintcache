[{"/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/index.js":"1","/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/App.js":"2","/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/components/Note.js":"3","/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/services/notes.js":"4"},{"size":335,"mtime":1625610776608,"results":"5","hashOfConfig":"6"},{"size":2846,"mtime":1625617838555,"results":"7","hashOfConfig":"6"},{"size":304,"mtime":1625633917335,"results":"8","hashOfConfig":"6"},{"size":531,"mtime":1625819696778,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1y2fi7c",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/index.js",[],["20","21"],"/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/App.js",["22"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: '16'\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error has happened...\");\n\n  useEffect(() => {\n    noteService.getAll().then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const addNote = e => {\n    e.preventDefault();\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = e => {\n    console.log(e.target.value);\n    setNewNote(e.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    // find the note we want to modify and assign it to the note variable\n    const note = notes.find(n => n.id === id);\n    // creating the new object, copies all the values using the spread operator\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote.data)));\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already removed from the server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  };\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className=\"error\">{message}</div>;\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/components/Note.js",[],"/home/aboud/React/fullstackopen-2021/part2/part2-notes/src/services/notes.js",["23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":13},{"ruleId":"32","severity":1,"message":"33","line":24,"column":1,"nodeType":"34","endLine":24,"endColumn":43},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]